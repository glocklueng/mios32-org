
Each application has to provide a local "mios32_config.h" file, which is included
from mios32.h to configure the code modules.

Main purpose is to allow to disable MIOS32 functions in order to remove unused code.

It also allows to configure the size of data structures (e.g. MIOS32_SRIO_NUM_SR)

Later we could also provide hard-coded variants to increase the flexibility on
unexpected usecases.


Currently, following options are provided. Just copy&paste the relevant lines
into your local mios32_config.h file

// disable code modules
#define MIOS32_DONT_USE_SYS
#define MIOS32_DONT_USE_SRIO
#define MIOS32_DONT_USE_DIN
#define MIOS32_DONT_USE_DOUT
#define MIOS32_DONT_USE_ENC
#define MIOS32_DONT_USE_LCD
#define MIOS32_DONT_USE_MIDI
#define MIOS32_DONT_USE_USB
#define MIOS32_DONT_USE_USB_DESC
#define MIOS32_DONT_USE_BOARD


// number of scanned SR registers on SRIO chain
// default value 16 (see mios32_srio.h)
#define MIOS32_SRIO_NUM_SR 16

// Which SPI peripheral should be used
// allowed values: 1 and 2
// (note: SPI1 will allocate DMA channel 2 and 3, SPI2 will allocate DMA channel 4 and 5)
#define MIOS32_SRIO_SPI 1

// should output pins be used in Open Drain mode? (perfect for 3.3V->5V levelshifting)
#define MIOS32_SRIO_OUTPUTS_OD 1

// maximal number of rotary encoders
#define MIOS32_ENC_NUM_MAX 64

// 1 to stay compatible to USB MIDI spec, 0 as workaround for some windows versions...
#define MIOS32_USB_DESC_USE_AC_INTERFACE 1

// allowed number of USB MIDI ports: 1..8
#define MIOS32_USB_DESC_NUM_PORTS 1

// buffer size (should be at least >= MIOS32_USB_DESC_DATA_*_SIZE/4)
#define MIOS32_USB_RX_BUFFER_SIZE   64 // packages
#define MIOS32_USB_TX_BUFFER_SIZE   64 // packages


// maximum number of mapped CLCD lines
#define MIOS32_LCD_MAX_MAP_LINES 4
